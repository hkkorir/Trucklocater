import random
from datetime import datetime, timedelta

class Truck:
    def __init__(self, truck_id, location):
        self.truck_id = truck_id
        self.location = location
        self.last_update = datetime.now()

    def update_location(self, new_location):
        self.location = new_location
        self.last_update = datetime.now()

    def get_location(self):
        return self.location

    def get_last_update(self):
        return self.last_update


class TruckLocator:
    def __init__(self):
        self.trucks = []
        self.quarterly_results = []

    def add_truck(self, truck_id, location):
        truck = Truck(truck_id, location)
        self.trucks.append(truck)

    def update_truck_location(self, truck_id, new_location):
        for truck in self.trucks:
            if truck.truck_id == truck_id:
                truck.update_location(new_location)
                break

    def generate_quarterly_results(self):
        result = {}
        for truck in self.trucks:
            location = truck.get_location()
            if location in result:
                result[location] += 1
            else:
                result[location] = 1
        self.quarterly_results.append(result)

    def get_quarterly_results(self):
        return self.quarterly_results

    def print_current_location(self):
        print("Current Truck Locations:")
        for truck in self.trucks:
            print(f"Truck {truck.truck_id}: {truck.get_location()}")

# Create a TruckLocator object
locator = TruckLocator()

# Add 15 trucks to the fleet
for i in range(1, 16):
    locator.add_truck(f"Truck{i}", "Location1")

# Update truck locations randomly
for i in range(1, 16):
    new_location = f"Location{random.randint(1, 3)}"
    locator.update_truck_location(f"Truck{i}", new_location)

# Generate quarterly results
locator.generate_quarterly_results()

# Print current truck locations
locator.print_current_location()

# Print quarterly results
print("Quarterly Results:")
results = locator.get_quarterly_results()
for i, result in enumerate(results):
    quarter = i + 1
    print(f"Quarter {quarter}: {result}")
